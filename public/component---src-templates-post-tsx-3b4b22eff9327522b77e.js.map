{"version":3,"sources":["webpack:///./src/components/comment.tsx","webpack:///./src/components/navigation.tsx","webpack:///./src/templates/post.tsx"],"names":["Comment","React","memo","repo","date","title","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","NavigationWrapper","styled","div","NavItem","Link","Navigation","list","defalutStyle","position","style","width","height","map","v","to","kebabCase","repeat","size","Post","props","pageContext","htmlAst","children","item","tagName","includes","properties","id","hList","filter","parseInt","slice","small","rightbar","description","html","marginTop","marginBottom","fontSize","textAlign","tags","tag","join","className","thumb","childImageSharp","fluid","renderAst"],"mappings":"qJAsCeA,EA5B6BC,IAAMC,MAChD,YAA2B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACPC,EAAeC,sBAsBrB,OApBAC,2BAAgB,WAAM,MACdC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAhBI,gCAiBJV,OACA,aAAiBC,EAAjB,MAA2BC,EAC3BS,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQP,GAAYQ,SAAQ,YAAkB,IAAhBC,EAAgB,KAAXC,EAAW,KACnDb,EAAWc,aAAaF,EAAKC,MAG/B,UAAAhB,EAAakB,eAAb,SAAsBC,YAAYhB,KACjC,CAACN,IAEG,yBAAKuB,IAAKpB,O,mjBC1BrB,IAAMqB,EAAoBC,IAAOC,IAAV,KAUjBC,EAAUF,YAAOG,OAAPH,CAAH,KAiBE,SAASI,EAAT,GAOZ,IANDC,EAMC,EANDA,KAOA,OACE,kBAAC,IAAD,CAAgBC,aAAc,CAAEC,SAAU,aACxC,kBAACR,EAAD,KACE,wBAAIS,MAAO,CAACC,MAAM,MAAOC,OAAO,OAAQH,SAAU,cACjDF,EAAKM,KAAI,SAAAC,GAAC,OACT,kBAACV,EAAD,CAASW,GAAE,IAAMC,YAAUF,EAAElB,QAAW,KAAKqB,OAAOH,EAAEI,MAAOJ,EAAElB,YC7BzE,IAAMuB,EAAqC5C,IAAMC,MAAK,SAAA4C,GAAS,MAC7DA,EAAMC,YAAYC,QAAQC,SAAWH,EAAMC,YAAYC,QAAQC,SAASV,KACtE,SAAAW,GAME,OALIA,EAAKC,SAAWD,EAAKC,QAAQC,SAAS,OACxCF,EAAKG,WAAa,CAChBC,GAAIZ,YAAUQ,EAAKD,SAAS,GAAG3B,SAG5B4B,KAIX,IAAMK,EAAQT,EAAMC,YAAYC,QAAQC,SACrCO,QAAO,SAAAN,GAAI,OAAIA,EAAKC,SAAWD,EAAKC,QAAQC,SAAS,QACrDb,KAAI,SAAAW,GACH,MAAO,CACL5B,MAAO4B,EAAKD,SAAS,GAAG3B,MACxBsB,KAAMa,SAASP,EAAKC,QAAQO,MAAM,QAGxC,OACE,kBAAC,IAAD,CAAQC,OAAK,EAACC,SAAU,kBAAC5B,EAAD,CAAYC,KAAMsB,KACxC,kBAAC,IAAD,CACElD,MAAOyC,EAAMC,YAAY1C,MACzBwD,YAAaf,EAAMC,YAAYe,OAEjC,yBAAK1B,MAAO,CAAE2B,UAAW,SAAUC,aAAc,WAC/C,4BAAKlB,EAAMC,YAAY1C,OACvB,uBAAG+B,MAAO,CAAE6B,SAAU,SAAUC,UAAW,QACxCpB,EAAMC,YAAY3C,MAErB,uBAAGgC,MAAO,CAAE6B,SAAU,SAAUC,UAAW,QAA3C,UACGpB,EAAMC,YAAYoB,YADrB,aACG,EAAwB5B,KAAI,SAAA6B,GAAG,UAAQA,KAAOC,KAAK,MAGtD,yBAAMC,UAAU,WACd,yBACEzD,IAAKiC,EAAMC,YAAYwB,MAAMC,gBAAgBC,MAAM5D,IACnDuB,MAAO,CAAE2B,UAAW,YAErBW,YAAU5B,EAAMC,YAAYC,WAGjC,kBAAC,EAAD,CACE7C,KAAK,gBACLE,MAAOyC,EAAMC,YAAY1C,MACzBD,KAAM0C,EAAMC,YAAY3C,WAMjByC","file":"component---src-templates-post-tsx-3b4b22eff9327522b77e.js","sourcesContent":["import React, { createRef, useLayoutEffect } from \"react\"\r\n\r\nconst src = \"https://utteranc.es/client.js\"\r\n\r\nexport interface IUtterancesProps {\r\n  repo: string\r\n  date: string\r\n  title: string\r\n}\r\n\r\nconst Comment: React.FC<IUtterancesProps> = React.memo(\r\n  ({ repo, date, title }) => {\r\n    const containerRef = createRef<HTMLDivElement>()\r\n\r\n    useLayoutEffect(() => {\r\n      const utterances = document.createElement(\"script\")\r\n\r\n      const attributes = {\r\n        src,\r\n        repo,\r\n        \"issue-term\": `${date} | ${title}`,\r\n        label: \"comment\",\r\n        theme: \"github-light\",\r\n        crossOrigin: \"anonymous\",\r\n        async: \"true\",\r\n      }\r\n\r\n      Object.entries(attributes).forEach(([key, value]) => {\r\n        utterances.setAttribute(key, value)\r\n      })\r\n\r\n      containerRef.current?.appendChild(utterances)\r\n    }, [repo])\r\n\r\n    return <div ref={containerRef} />\r\n  }\r\n)\r\n\r\nexport default Comment\r\n","import React from \"react\"\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\r\nimport { Query } from \"../gen/graphql-types\"\r\nimport styled from \"styled-components\"\r\nimport { kebabCase } from \"../lib/utils\"\r\n\r\nimport PageTransition from \"gatsby-plugin-page-transitions\"\r\n\r\nconst NavigationWrapper = styled.div`\r\n  position: fixed;\r\n  top: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    & {\r\n      display: none;\r\n  }\r\n`\r\nconst NavItem = styled(Link)`\r\n  white-space: pre;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  transition: 0.3s;\r\n\r\n  &:hover{\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n  }\r\n  &:link, &:visited {\r\n    color: black;\r\n  }\r\n\r\n \r\n`;\r\n\r\nexport default function Navigation({\r\n  list,\r\n}: {\r\n  list: {\r\n    value: string\r\n    size: number\r\n  }[]\r\n}) {\r\n  return (\r\n    <PageTransition defalutStyle={{ position: \"relative\" }}>\r\n      <NavigationWrapper>\r\n        <hr style={{width:'5px', height:'100%', position: 'absolute'}} />\r\n        {list.map(v => (\r\n          <NavItem to={`#${kebabCase(v.value)}`}>{\"\\t\".repeat(v.size)}{v.value}</NavItem>\r\n        ))}\r\n      </NavigationWrapper>\r\n    </PageTransition>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { ITemplateProps } from \"../interface\"\r\nimport SEO from \"../components/seo\"\r\nimport Comment from \"../components/comment\"\r\nimport { renderAst } from \"../lib/utils\"\r\nimport { kebabCase } from \"../lib/utils\"\r\nimport Navigation from \"../components/navigation\"\r\nimport { graphql } from \"gatsby\"\r\n\r\ntype IPostTemplateProps = ITemplateProps<{\r\n  html: string\r\n  htmlAst: any\r\n  title: string\r\n  date: string\r\n  tags: string[]\r\n  thumb: any\r\n}>\r\n\r\nconst Post: React.FC<IPostTemplateProps> = React.memo(props => {\r\n  props.pageContext.htmlAst.children = props.pageContext.htmlAst.children.map(\r\n    item => {\r\n      if (item.tagName && item.tagName.includes(\"h\")) {\r\n        item.properties = {\r\n          id: kebabCase(item.children[0].value),\r\n        }\r\n      }\r\n      return item\r\n    }\r\n  )\r\n\r\n  const hList = props.pageContext.htmlAst.children\r\n    .filter(item => item.tagName && item.tagName.includes(\"h\"))\r\n    .map(item => {\r\n      return {\r\n        value: item.children[0].value,\r\n        size: parseInt(item.tagName.slice(1)),\r\n      }\r\n    })\r\n  return (\r\n    <Layout small rightbar={<Navigation list={hList} />}>\r\n      <SEO\r\n        title={props.pageContext.title}\r\n        description={props.pageContext.html}\r\n      />\r\n      <div style={{ marginTop: \"1.5rem\", marginBottom: \"1.5rem\" }}>\r\n        <h1>{props.pageContext.title}</h1>\r\n        <p style={{ fontSize: \"0.8rem\", textAlign: \"end\" }}>\r\n          {props.pageContext.date}\r\n        </p>\r\n        <p style={{ fontSize: \"0.8rem\", textAlign: \"end\" }}>\r\n          {props.pageContext.tags?.map(tag => `#${tag}`).join(\" \")}\r\n        </p>\r\n\r\n        <div  className=\"content\">\r\n          <img\r\n            src={props.pageContext.thumb.childImageSharp.fluid.src}\r\n            style={{ marginTop: \"1.5rem\" }}\r\n          />\r\n          {renderAst(props.pageContext.htmlAst)}\r\n        </div>\r\n      </div>\r\n      <Comment\r\n        repo=\"gron1gh1/blog\"\r\n        title={props.pageContext.title}\r\n        date={props.pageContext.date}\r\n      />\r\n    </Layout>\r\n  )\r\n})\r\n\r\nexport default Post\r\n"],"sourceRoot":""}