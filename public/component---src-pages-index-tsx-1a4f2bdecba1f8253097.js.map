{"version":3,"sources":["webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList.tsx"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","data","props","IconBase","Tree2Element","tree","map","node","tag","key","child","elem","conf","computedSize","title","svgProps","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","ProfileBox","styled","div","ProfileImg","ProfileContent","Profile","src","marginRight","target","href","marginTop","IndexView","useStaticQuery","PostList","allMarkdownRemark","edges","IndexPage","description","Card","PostView","to","date","tags","onClick","textDecoration","join","dispatch","useDispatch","listStyleType","marginBottom","id","kebabCase","frontmatter","thumb","childImageSharp","fluid","excerpt","BlogActions","toggleAnimation"],"mappings":"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","file":"component---src-pages-index-tsx-1a4f2bdecba1f8253097.js","sourcesContent":["export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/refactoringui/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Query } from \"../gen/graphql-types\"\r\nimport PostList from \"../components/PostList\"\r\nimport styled from \"styled-components\"\r\nimport { AiFillGithub } from \"react-icons/ai\"\r\nimport { HiOutlineMail } from \"react-icons/hi\"\r\n\r\nconst LatestPostListQuery = graphql`\r\n  query LatestPostListQuery {\r\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\r\n      edges {\r\n        node {\r\n          excerpt(truncate: true, pruneLength: 150)\r\n          frontmatter {\r\n            tags\r\n            title\r\n            date(formatString: \"YYYY-MM-DD HH:mm:ss\")\r\n            thumb {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, maxHeight: 300) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ProfileBox = styled.div`\r\n  flex: 1;\r\n  border-radius: 10px;\r\n  margin-top: 30px;\r\n  padding-bottom: 2rem;\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    text-align: center;\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst ProfileImg = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 70%;\r\n  overflow: hidden;\r\n  flex: none;\r\n  margin-left: 10px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n`\r\n\r\nconst ProfileContent = styled.div`\r\n  margin-left: 30px;\r\n  .name {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n\r\n    div {\r\n      margin-top: -2px;\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n  .link{\r\n    margin-top: 0.7rem;\r\n  }\r\n  .icon {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 0.8rem;\r\n    font-weight: bold;\r\n    a{\r\n      text-decoration: none;\r\n      &:link, &:visited{\r\n        color:black;\r\n      }\r\n    }  \r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .icon {\r\n      justify-content: center;\r\n    }\r\n  }\r\n  @media (max-width: 440px) {\r\n    .content {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n`\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <ProfileBox>\r\n      <ProfileImg>\r\n        <img src=\"https://avatars2.githubusercontent.com/u/41789633?s=460&u=78fa3dc9f8cabfc341f994074aac031e249e1ae3&v=4\" />\r\n      </ProfileImg>\r\n      <ProfileContent>\r\n        <p className=\"name\">강선규</p>\r\n        <div className=\"content\">\r\n          <p>이것저것 다하는 풀스택 지향 개발자입니다😉</p>\r\n          <p>웹 어플리케이션 개발을 좋아합니다💕</p>\r\n          <p>일상생활의 문제를 자동화하는 것을 좋아합니다✨</p>\r\n          <div className=\"link\">\r\n            <div className=\"icon\">\r\n              <AiFillGithub\r\n                size={20}\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n              <a target=\"_blank\" href=\"https://github.com/gron1gh1\">github.com/gron1gh1</a>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <HiOutlineMail\r\n                size={20}\r\n                style={{ marginTop: \"2px\", marginRight: \"5px\" }}\r\n              />\r\n              <a href=\"mailto:gron1gh1@gmail.com\">gron1gh1@gmail.com</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ProfileContent>\r\n    </ProfileBox>\r\n  )\r\n}\r\nconst IndexView = () => {\r\n  const data = useStaticQuery<Query>(LatestPostListQuery)\r\n  return <ul>{PostList(data.allMarkdownRemark.edges)}</ul>\r\n}\r\nconst IndexPage = () => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" description=\"Develment IT Blog\\n선규의 개발 블로그 !\" />\r\n      <Profile />\r\n      <hr />\r\n      <IndexView />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport { kebabCase } from \"../lib/utils\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { BlogActions } from \"../state/reducer\"\r\nimport { MarkdownRemarkEdge } from \"../gen/graphql-types\"\r\n\r\nconst Card = styled.div`\r\n  width: 100%;\r\n  height: 230px;\r\n  border-radius: 5px;\r\n  background: white;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  transition: 0.4s ease-out;\r\n  &:hover {\r\n    transform: translateY(20px);\r\n    &:before {\r\n      opacity: 1;\r\n    }\r\n    .bg-bar {\r\n      border-radius: 5px;\r\n      height: 100%;\r\n    }\r\n    .info {\r\n      transition: 0.4s ease-out;\r\n      p:nth-last-child(1) {\r\n        visibility : visible;\r\n      }\r\n      transform: translateY(-1rem);\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 5px;\r\n    transition: 1s;\r\n  }\r\n\r\n  .bg-bar {\r\n    position: absolute;\r\n    border-radius: 0 0 5px 5px;\r\n    width: 100%;\r\n    height: 120px;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    transition: 0.5s;\r\n  }\r\n\r\n  .info {\r\n    position: relative;\r\n    z-index: 3;\r\n    color: white;\r\n    padding-left: 1.5rem;\r\n    padding-right: 1.5rem;\r\n    transform: translateY(4.5rem);\r\n    transition: 0.5s;\r\n    h1 {\r\n      margin: 0px;\r\n    }\r\n\r\n    p {\r\n      letter-spacing: 1px;\r\n      font-size: 15px;\r\n    }\r\n\r\n    p:nth-last-child(1) {\r\n      padding-top: 10px;\r\n      height:5rem;\r\n      visibility : hidden;\r\n    }\r\n  }\r\n`\r\n\r\ninterface IPostView {\r\n  to: string\r\n  src: string\r\n  title: string\r\n  date: string\r\n  tags: string[]\r\n  description: string\r\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void\r\n}\r\nexport function PostView({\r\n  to,\r\n  src,\r\n  title,\r\n  date,\r\n  tags,\r\n  description,\r\n  onClick,\r\n}: IPostView) {\r\n  return (\r\n    <Link to={to} style={{ textDecoration: \"none\" }} onClick={onClick}>\r\n      <Card>\r\n        <img src={src} />\r\n        <div className=\"bg-bar\" />\r\n        <div className=\"info\">\r\n          <h1>{title}</h1>\r\n          <p>{tags.map(tag => `#${tag}`).join(\" \")}</p>\r\n          <p>{date}</p>\r\n          <p>{description}</p>\r\n        </div>\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\nexport default function PostList(edges: MarkdownRemarkEdge[]) {\r\n  const dispatch = useDispatch()\r\n  return edges.map(({ node }: any) => (\r\n    <li style={{ listStyleType: \"none\", marginBottom: \"30px\" }} key={node.id}>\r\n      <PostView\r\n        to={`/${kebabCase(node.frontmatter.title)}`}\r\n        src={node.frontmatter.thumb.childImageSharp.fluid.src}\r\n        title={node.frontmatter.title}\r\n        date={node.frontmatter.date}\r\n        tags={node.frontmatter.tags}\r\n        description={node.excerpt}\r\n        onClick={() => {\r\n          dispatch(BlogActions.toggleAnimation(true))\r\n        }}\r\n      />\r\n    </li>\r\n  ))\r\n}\r\n"],"sourceRoot":""}